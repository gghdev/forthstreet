{
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "ignorePatterns": [
    "tailwind.config.js"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "lodash",
    "react",
    "react-hooks"
  ],
  "extends": [
    "next/core-web-vitals",
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "camelcase": "off",
    "class-methods-use-this": 0,
    "max-classes-per-file": "off",
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "__typename"
        ]
      }
    ],
    "react/require-default-props": 0,
    "react/jsx-curly-newline": 0,
    "react/jsx-filename-extension": 0,
    "react/react-in-jsx-scope": "off",
    "react/jsx-indent": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/jsx-props-no-spreading": 0,
    "react/jsx-wrap-multilines": 0,
    "react/prefer-stateless-function": 0,
    "react/no-array-index-key": 0,
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true
      }
    ],
    "import/extensions": 0,
    "import/newline-after-import": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc"
        },
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            // CSS should be loaded last so that it can override components in common folder
            "pattern": "./*.module.css",
            "group": "sibling",
            "position": "after"
          }
        ],
        "newlines-between": "never"
      }
    ],
    "import/prefer-default-export": 0,
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "labelComponents": [
          "Label",
          "CheckboxLabel"
        ],
        "labelAttributes": [
          "description"
        ],
        "controlComponents": [
          "Checkbox",
          "CheckboxField",
          "CurrencyInput",
          "DateInputField",
          "Field",
          "Input",
          "InputField",
          "MaskedInputField",
          "PhoneNumberInputField",
          "RadioInput",
          "Select",
          "SelectField",
          "StyledInput"
        ]
      }
    ],
    "jsx-a11y/control-has-associated-label": [
      "error",
      {
        "controlComponents": [
          "Button",
          "SubmitButton"
        ]
      }
    ],
    "lodash/import-scope": [
      "error",
      "method"
    ],
    // Using shorthands make typescript unable to see what's happening
    "lodash/prop-shorthand": [
      "error",
      "never"
    ],
    "lodash/matches-prop-shorthand": [
      "error",
      "never"
    ],
    "lodash/matches-shorthand": [
      "error",
      "never"
    ],
    "no-restricted-exports": 0
  },
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "react/prop-types": 0,
        "@typescript-eslint/camelcase": 0,
        "@typescript-eslint/explicit-function-return-type": 0,
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/indent": 0,
        "@typescript-eslint/member-delimiter-style": 0,
        "@typescript-eslint/explicit-module-boundary-types": "off",
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-redeclare.md
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-empty-function.md
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-shadow.md
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "error",
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-duplicate-imports.md
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": "error",
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-unused-expressions.md
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-unused-vars.md
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-implied-eval.md
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/return-await.md
        "return-await": "off",
        "@typescript-eslint/return-await": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-invalid-this.md
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": [
          "error"
        ],
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/init-declarations.md
        "init-declarations": "off",
        "@typescript-eslint/init-declarations": "off"
      }
    },
    {
      "files": [
        "*.test.ts",
        "*.test.tsx",
        "*.stories.ts",
        "*.stories.tsx"
      ],
      "rules": {
        "@typescript-eslint/ban-ts-ignore": 0
      }
    }
  ]
}
